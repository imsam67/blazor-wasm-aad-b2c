@using Microsoft.AspNetCore.Components.Authorization;

@inherits LayoutComponentBase

<AuthorizeView>
    <Authorized>
        <BlazorBootstrapLayout StickyHeader="true">

            <HeaderSection>
                <div class="d-flex justify-content-start">
                    <Icon Name="IconName.List" role="button" @onclick="ToggleSidebar" />
                    <a href="https://docs.microsoft.com/aspnet/" target="_blank">About</a>
                </div>
                <div>
                    <LoginDisplay />
                </div>
                <ThemeSwitcher Class="ps-3 ps-lg-2" Position="DropdownMenuPosition.End" />
            </HeaderSection>

            <SidebarSection>
                <Sidebar @ref="sidebar"
                         Href="/"
                         ImageSrc="images/logo/logo_small.png"
                         Title="BlazorBootstrapAadB2c"
                         DataProvider="SidebarDataProvider" />
            </SidebarSection>

            <ContentSection>
                @Body
            </ContentSection>

            <FooterSection>
                Footer links...
            </FooterSection>

        </BlazorBootstrapLayout>
    </Authorized>
    <NotAuthorized>
        <BlazorBootstrapLayout StickyHeader="true">
            <HeaderSection>
                <div>
                    <LoginDisplay />
                </div>
            </HeaderSection>
            <ContentSection>
                <div class="alert alert-danger" role="alert">
                    You are not logged in.
                </div>
            </ContentSection>
        </BlazorBootstrapLayout>
    </NotAuthorized>
</AuthorizeView>

@code {

    Sidebar sidebar = default!;
    IEnumerable<NavItem>? navItems;

    private async Task<SidebarDataProviderResult> SidebarDataProvider(SidebarDataProviderRequest request)
    {
        if (navItems is null)
            navItems = GetNavItems();

        return await Task.FromResult(request.ApplyTo(navItems));
    }

    private IEnumerable<NavItem> GetNavItems()
    {
        navItems = new List<NavItem>
        {
            new NavItem { Id = "1", Href = "/", IconName = IconName.ColumnsGap, Text = "Dashboard"},

            new NavItem { Id = "2", IconName = IconName.LayoutSidebarInset, Text = "Content", IconColor = IconColor.Primary },
            new NavItem { Id = "3", Href = "/icons", IconName = IconName.PersonSquare, Text = "Icons", ParentId="2"},

            new NavItem { Id = "4", IconName = IconName.ExclamationTriangleFill, Text = "Components", IconColor = IconColor.Success },
            new NavItem { Id = "5", Href = "/alerts", IconName = IconName.CheckCircleFill, Text = "Alerts", ParentId="4"},
            new NavItem { Id = "6", Href = "/breadcrumb", IconName = IconName.SegmentedNav, Text = "Breadcrumb", ParentId="4"},
            new NavItem { Id = "7", Href = "/sidebar", IconName = IconName.LayoutSidebarInset, Text = "Sidebar", ParentId="4"},

            new NavItem { Id = "8", IconName = IconName.WindowPlus, Text = "Forms", IconColor = IconColor.Danger },
            new NavItem { Id = "9", Href = "/autocomplete", IconName = IconName.InputCursorText, Text = "Auto Complete", ParentId="8"},
            new NavItem { Id = "10", Href = "/currency-input", IconName = IconName.CurrencyDollar, Text = "Currency Input", ParentId="8"},
            new NavItem { Id = "11", Href = "/number-input", IconName = IconName.InputCursor, Text = "Number Input", ParentId="8"},
            new NavItem { Id = "12", Href = "/switch", IconName = IconName.ToggleOn, Text = "Switch", ParentId="8"},
        };

        return navItems;
    }

    private void ToggleSidebar() => sidebar.ToggleSidebar();
}